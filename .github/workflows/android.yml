name: Android E2E Tests

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:

jobs:
  test-android:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup sdk
        run: |
          $ANDROID_HOME/tools/bin/sdkmanager "platform-tools" "tools" >/dev/null || true
          $ANDROID_HOME/tools/bin/sdkmanager "build-tools;29.0.3" >/dev/null || true
          $ANDROID_HOME/tools/bin/sdkmanager "emulator" --channel=3 >/dev/null || true
          $ANDROID_HOME/tools/bin/sdkmanager --list
      - name: Install emulator
        run: $ANDROID_HOME/tools/bin/sdkmanager "system-images;android-29;default;x86"
      - name: Accept license
        run: $ANDROID_HOME/tools/bin/sdkmanager --licenses
      - name: ADB start stop
        run: |
          $ANDROID_HOME/platform-tools/adb start-server
          $ANDROID_HOME/platform-tools/adb devices
          $ANDROID_HOME/platform-tools/adb kill-server
          ls -la ~/.android
      - name: Create emulator
        run: $ANDROID_HOME/tools/bin/avdmanager create avd --force --name TestingAVD --package "system-images;android-29;default;x86" --tag default --device pixel
      - name: Start emulator
        run: nohup $ANDROID_HOME/emulator/emulator @TestingAVD -cores 1 -gpu auto -accel on -memory 1024 -no-audio -no-snapshot -no-boot-anim -no-window > /dev/null 2>&1 &
      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - name: Install npm denpendencies
        run: yarn install --frozen-lockfile --non-interactive --silent
      - name: Compilation
        run: yarn build
      - name: Install example npm denpendencies
        run: cd example && yarn install --frozen-lockfile --non-interactive --silent
      - name: Generate umi temp files
        run: cd example && yarn generate
      - name: Show details
        run: cd example && pwd && ls -a
      - name: Start metro dev server
        run: cd example && nohup yarn start --reset-cache > /dev/null 2>&1 &
      - name: Start android
        run: cd example && yarn android
      - name: Wait for AVD to be ready
        run: >
          export BOOT=""

          echo "Waiting for AVD to finish booting"

          export PATH=$(dirname $(dirname $(command -v android)))/platform-tools:$PATH

          until [[ "$BOOT" =~ "1" ]]; do
            sleep 5
            export BOOT=$(adb -e shell getprop sys.boot_completed 2>&1)
          done

          sleep 15

          adb shell settings put global window_animation_scale 0

          adb shell settings put global transition_animation_scale 0

          adb shell settings put global animator_duration_scale 0

          echo "Android Virtual Device is now ready."


      - name: Run e2e tests
        run: cd example && yarn e2e:run-android
