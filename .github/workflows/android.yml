name: Android E2E Tests

on:
  push:
    branches:
      - master
    tags:
      - v*

jobs:
  test-android:
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
        working-directory: example
    steps:
      - uses: actions/checkout@v2
      - name: Install android emulator
        run: |
          $ANDROID_HOME/tools/bin/sdkmanager "platform-tools" "tools" > /dev/null || true
          $ANDROID_HOME/tools/bin/sdkmanager "system-images;android-29;google_apis;x86" > /dev/null || true
          $ANDROID_HOME/tools/bin/sdkmanager "emulator" --channel=3 >/dev/null || true
          $ANDROID_HOME/tools/bin/sdkmanager "build-tools;29.0.3" > /dev/null || true
          $ANDROID_HOME/tools/bin/sdkmanager --licenses > /dev/null || true
          $ANDROID_HOME/tools/bin/sdkmanager --list
      - name: ADB start stop
        run: |
          $ANDROID_HOME/platform-tools/adb start-server
          $ANDROID_HOME/platform-tools/adb devices
          $ANDROID_HOME/platform-tools/adb kill-server
          ls -la ~/.android
      - name: Create android emulator
        run: $ANDROID_HOME/tools/bin/avdmanager create avd -n TestingAVD -f -k "system-images;android-29;google_apis;x86"
      - name: Start android emulator
        run: nohup $ANDROID_HOME/emulator/emulator @TestingAVD -cores 1 -gpu auto -accel on -memory 1024 -no-audio -no-snapshot -no-boot-anim -no-window > /dev/null 2>&1 &
      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - name: Install npm denpendencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --non-interactive --silent
      - name: Generate umi temp files
        run: yarn generate
      - name: Show details
        run: pwd && ls -a
      - name: Start metro dev server
        run: nohup yarn start > /dev/null 2>&1 &
      - name: Start android
        run: yarn android
      - name: Wait for AVD to be ready
        run: >
          export BOOT=""

          echo "Waiting for AVD to finish booting"

          export PATH=$(dirname $(dirname $(command -v android)))/platform-tools:$PATH

          until [[ "$BOOT" =~ "1" ]]; do
            sleep 5
            export BOOT=$(adb -e shell getprop sys.boot_completed 2>&1)
          done

          sleep 15

          adb shell settings put global window_animation_scale 0

          adb shell settings put global transition_animation_scale 0

          adb shell settings put global animator_duration_scale 0

          echo "Android Virtual Device is now ready."


      - name: Run e2e tests
        run: yarn e2e:run-android
