name: Android E2E Tests

on:
  push:
    branches:
      - master
    tags:
      - v*

jobs:
  test-android:
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
        working-directory: example
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - name: Install npm denpendencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --non-interactive --silent
      - name: Create android package
        run: $ANDROID_HOME/tools/bin/sdkmanager "system-images;android-29;google_apis;x86"
      - name: Accept android license agreement
        run: $ANDROID_HOME/tools/bin/sdkmanager --licenses
      - name: Create android AVD
        run: $ANDROID_HOME/tools/bin/avdmanager create avd --force --name TestingAVD --package "system-images;android-29;google_apis;x86" --tag google_apis --device pixel
      - name: Start android emulator
        run: nohup $ANDROID_HOME/emulator/emulator @TestingAVD -cores 1 -gpu auto -accel on -memory 1024 -no-audio -no-snapshot -no-boot-anim -logcat *:W | grep -i 'ReactNative\|com.rnumitestapp' > /dev/null 2>&1 &
      - name: Wait for AVD to be ready
        run: >
          export BOOT=""

          echo "Waiting for AVD to finish booting"

          export PATH=$(dirname $(dirname $(command -v
          android)))/platform-tools:$PATH

          until [[ "$BOOT" =~ "1" ]]; do
            sleep 5
            export BOOT=$(adb -e shell getprop sys.boot_completed 2>&1)
          done

          sleep 15

          adb shell settings put global window_animation_scale 0

          adb shell settings put global transition_animation_scale 0

          adb shell settings put global animator_duration_scale 0

          echo "Android Virtual Device is now ready."
      - name: Build android apk
        run: yarn e2e:build-android
      - name: Run e2e tests
        run: yarn start & yarn e2e:run-android
